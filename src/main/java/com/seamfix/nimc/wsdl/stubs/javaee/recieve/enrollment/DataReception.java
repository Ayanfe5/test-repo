
package com.seamfix.nimc.wsdl.stubs.javaee.recieve.enrollment;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "DataReception", targetNamespace = "http://frontend.ws.nimc.gov.ng/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface DataReception {


    /**
     * 
     * @param centerId
     * @param password
     * @param data
     * @param userName
     * @param trackingId
     * @return
     *     returns ng.gov.nimc.ws.frontend.RegistrationResponse
     * @throws InvalidRequestException_Exception
     * @throws InvalidXMLDataException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "receiveDeathData", targetNamespace = "http://frontend.ws.nimc.gov.ng/", className = "ng.gov.nimc.ws.frontend.ReceiveDeathData")
    @ResponseWrapper(localName = "receiveDeathDataResponse", targetNamespace = "http://frontend.ws.nimc.gov.ng/", className = "ng.gov.nimc.ws.frontend.ReceiveDeathDataResponse")
    @Action(input = "http://frontend.ws.nimc.gov.ng/DataReception/receiveDeathDataRequest", output = "http://frontend.ws.nimc.gov.ng/DataReception/receiveDeathDataResponse", fault = {
        @FaultAction(className = InvalidRequestException_Exception.class, value = "http://frontend.ws.nimc.gov.ng/DataReception/receiveDeathData/Fault/InvalidRequestException"),
        @FaultAction(className = InvalidXMLDataException_Exception.class, value = "http://frontend.ws.nimc.gov.ng/DataReception/receiveDeathData/Fault/InvalidXMLDataException")
    })
    public RegistrationResponse receiveDeathData(
            @WebParam(name = "userName", targetNamespace = "")
                    String userName,
            @WebParam(name = "password", targetNamespace = "")
                    String password,
            @WebParam(name = "trackingId", targetNamespace = "")
                    String trackingId,
            @WebParam(name = "centerId", targetNamespace = "")
                    String centerId,
            @WebParam(name = "data", targetNamespace = "")
                    String data)
        throws InvalidRequestException_Exception, InvalidXMLDataException_Exception
    ;

    /**
     * 
     * @param centerId
     * @param password
     * @param data
     * @param userName
     * @param trackingId
     * @return
     *     returns ng.gov.nimc.ws.frontend.RegistrationResponse
     * @throws InvalidRequestException_Exception
     * @throws InvalidXMLDataException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "receiveNewData", targetNamespace = "http://frontend.ws.nimc.gov.ng/", className = "ng.gov.nimc.ws.frontend.ReceiveNewData")
    @ResponseWrapper(localName = "receiveNewDataResponse", targetNamespace = "http://frontend.ws.nimc.gov.ng/", className = "ng.gov.nimc.ws.frontend.ReceiveNewDataResponse")
    @Action(input = "http://frontend.ws.nimc.gov.ng/DataReception/receiveNewDataRequest", output = "http://frontend.ws.nimc.gov.ng/DataReception/receiveNewDataResponse", fault = {
        @FaultAction(className = InvalidRequestException_Exception.class, value = "http://frontend.ws.nimc.gov.ng/DataReception/receiveNewData/Fault/InvalidRequestException"),
        @FaultAction(className = InvalidXMLDataException_Exception.class, value = "http://frontend.ws.nimc.gov.ng/DataReception/receiveNewData/Fault/InvalidXMLDataException")
    })
    public RegistrationResponse receiveNewData(
            @WebParam(name = "userName", targetNamespace = "")
                    String userName,
            @WebParam(name = "password", targetNamespace = "")
                    String password,
            @WebParam(name = "trackingId", targetNamespace = "")
                    String trackingId,
            @WebParam(name = "centerId", targetNamespace = "")
                    String centerId,
            @WebParam(name = "data", targetNamespace = "")
                    String data)
        throws InvalidRequestException_Exception, InvalidXMLDataException_Exception
    ;

    /**
     * 
     * @param centerId
     * @param password
     * @param data
     * @param userName
     * @param trackingId
     * @return
     *     returns ng.gov.nimc.ws.frontend.RegistrationResponse
     * @throws InvalidRequestException_Exception
     * @throws InvalidXMLDataException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "receiveModificationData", targetNamespace = "http://frontend.ws.nimc.gov.ng/", className = "ng.gov.nimc.ws.frontend.ReceiveModificationData")
    @ResponseWrapper(localName = "receiveModificationDataResponse", targetNamespace = "http://frontend.ws.nimc.gov.ng/", className = "ng.gov.nimc.ws.frontend.ReceiveModificationDataResponse")
    @Action(input = "http://frontend.ws.nimc.gov.ng/DataReception/receiveModificationDataRequest", output = "http://frontend.ws.nimc.gov.ng/DataReception/receiveModificationDataResponse", fault = {
        @FaultAction(className = InvalidRequestException_Exception.class, value = "http://frontend.ws.nimc.gov.ng/DataReception/receiveModificationData/Fault/InvalidRequestException"),
        @FaultAction(className = InvalidXMLDataException_Exception.class, value = "http://frontend.ws.nimc.gov.ng/DataReception/receiveModificationData/Fault/InvalidXMLDataException")
    })
    public RegistrationResponse receiveModificationData(
            @WebParam(name = "userName", targetNamespace = "")
                    String userName,
            @WebParam(name = "password", targetNamespace = "")
                    String password,
            @WebParam(name = "trackingId", targetNamespace = "")
                    String trackingId,
            @WebParam(name = "centerId", targetNamespace = "")
                    String centerId,
            @WebParam(name = "data", targetNamespace = "")
                    String data)
        throws InvalidRequestException_Exception, InvalidXMLDataException_Exception
    ;

    /**
     * 
     * @param centerId
     * @param password
     * @param data
     * @param userName
     * @param trackingId
     * @return
     *     returns ng.gov.nimc.ws.frontend.RegistrationResponse
     * @throws InvalidRequestException_Exception
     * @throws InvalidXMLDataException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "receiveReprintData", targetNamespace = "http://frontend.ws.nimc.gov.ng/", className = "ng.gov.nimc.ws.frontend.ReceiveReprintData")
    @ResponseWrapper(localName = "receiveReprintDataResponse", targetNamespace = "http://frontend.ws.nimc.gov.ng/", className = "ng.gov.nimc.ws.frontend.ReceiveReprintDataResponse")
    @Action(input = "http://frontend.ws.nimc.gov.ng/DataReception/receiveReprintDataRequest", output = "http://frontend.ws.nimc.gov.ng/DataReception/receiveReprintDataResponse", fault = {
        @FaultAction(className = InvalidRequestException_Exception.class, value = "http://frontend.ws.nimc.gov.ng/DataReception/receiveReprintData/Fault/InvalidRequestException"),
        @FaultAction(className = InvalidXMLDataException_Exception.class, value = "http://frontend.ws.nimc.gov.ng/DataReception/receiveReprintData/Fault/InvalidXMLDataException")
    })
    public RegistrationResponse receiveReprintData(
            @WebParam(name = "userName", targetNamespace = "")
                    String userName,
            @WebParam(name = "password", targetNamespace = "")
                    String password,
            @WebParam(name = "trackingId", targetNamespace = "")
                    String trackingId,
            @WebParam(name = "centerId", targetNamespace = "")
                    String centerId,
            @WebParam(name = "data", targetNamespace = "")
                    String data)
        throws InvalidRequestException_Exception, InvalidXMLDataException_Exception
    ;

}
